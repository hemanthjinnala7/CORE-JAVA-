when we have a abstract class with only abstract methods we can change it into a  interface model
abstract class A
{
    public abstract void show();
    public abstract void config();

} // we change this like interface ...

interface A
{
    void show();
    void config();
}
// we omit public abstract because they are default in interface
//when we need to use variables in our interface they are "final" and "static"
//final -> we can only assign values to it only once
//static -> we can call them by class name . no need of any object creation

interface A
{
    int age = 8;
    String name = "Hemanth";
    void show();
    void config();
}

//like abstract ...in interface also the sub-class should override every abstract method but with a new keyword "implements"

class B extends A {
  public void show(){
sout("inshow");
public void config(){
sout("inconfig");
}

public static void main(){
A obj = new B ();
obj.show();
obj.config();
}

